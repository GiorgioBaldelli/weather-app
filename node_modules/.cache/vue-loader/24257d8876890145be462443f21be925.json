{"remainingRequest":"/Users/giorgiobaldelli/Documents/weather-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/giorgiobaldelli/Documents/weather-app/src/components/weather.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/giorgiobaldelli/Documents/weather-app/src/components/weather.vue","mtime":1567961101259},{"path":"/Users/giorgiobaldelli/Documents/weather-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/giorgiobaldelli/Documents/weather-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/giorgiobaldelli/Documents/weather-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/giorgiobaldelli/Documents/weather-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"Weather\",\n  data () {\n    return {\n      weatherObj: {},\n      dayWeek: \"\"\n    }\n  },\n  methods: {\n    dayConverter (UNIX_timestamp) {\n      var a = new Date(UNIX_timestamp * 1000);\n      var months = [\"January\",\"February\", \"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\n      var month = months[a.getMonth()];\n      var date = a.getDate();\n      var day = date + '. ' + month\n      return day;\n    },\n    cleanData (data) {\n      var d = new Date();\n      var weekday = new Array(7);\n      weekday[0] = \"Sunday\";\n      weekday[1] = \"Monday\";\n      weekday[2] = \"Tuesday\";\n      weekday[3] = \"Wednesday\";\n      weekday[4] = \"Thursday\";\n      weekday[5] = \"Friday\";\n      weekday[6] = \"Saturday\";\n      this.dayWeek = weekday[d.getDay()]\n      var celsius;\n      var celsiusMax;\n      var celsiusMin;\n      var city;\n      var date;\n      var hour;\n      var lastItem = data.list.slice(1).slice(-9);\n      var visibility;\n      var fetchedWeather = {};\n      for (var i = 0; i < lastItem.length; i++) {\n        city = data[\"city\"][\"name\"];\n        date = this.dayConverter(lastItem[i][\"dt\"]);\n        hour = this.hourConverter(lastItem[i][\"dt\"]);\n        visibility = lastItem[i][\"weather\"][0][\"main\"];\n        celsius =  Math.round(lastItem[i][\"main\"][\"temp\"] -273.15);\n        celsiusMax = Math.round(lastItem[i][\"main\"][\"temp_max\"] -273.15);\n        celsiusMin = Math.round(lastItem[i][\"main\"][\"temp_min\"] -273.15);\n        fetchedWeather[i] = {\n                            \"city\": city,\n                            \"date\": date,\n                            \"hour\": hour,\n                            \"celsius\" : celsius,\n                            \"celsius_max\": celsiusMax,\n                            \"celsius_min\": celsiusMin,\n                            \"visibility\" : visibility\n                            };\n      }\n      this.weatherObj = fetchedWeather;\n    },\n    getItems () {\n      const url = \"https://cors-anywhere.herokuapp.com\" + \n                  \"/http://samples.openweathermap.org/data/2.5/forecast?id=524901&appid=b6907d289e10d714a6e88b30761fae22\";\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          this.cleanData(data)\n        });    \n    },\n    hourConverter(UNIX_timestamp){\n      var a = new Date(UNIX_timestamp * 1000);\n      var hour = a.getHours() < 10 ? '0' + a.getHours() : a.getHours();\n      var min = a.getMinutes() < 10 ? '0' + a.getMinutes() : a.getMinutes();\n      var time = hour + ':' + min\n      return time;\n    }   \n  },\n  beforeMount: function(){\n    this.getItems()\n  }\n}\n",{"version":3,"sources":["weather.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"weather.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"widget\">\n    <div class=\"flex-container\">\n      <div class=\"top-icon\">\n        <img alt=\"sun\" src=\"~@/assets/sun.svg\">\n      </div>\n      <div class=\"temp-data\" v-if=\"weatherObj[0]\">\n        <div class=\"temp-top\">\n          <div class=\"visibility\">{{weatherObj[0]['visibility']}}</div>\n          <div class=\"max\">{{weatherObj[0]['celsius_min']}}</div>\n          <div class=\"separator\"></div>\n          <div class=\"min\">{{weatherObj[0]['celsius_max']}}</div>\n        </div>\n        <div class=\"celsius\">{{weatherObj[0]['celsius']}}</div>\n      </div>\n      <div class=\"location-data\" v-if=\"weatherObj[0]\">\n        <div class=\"top\">{{weatherObj[0]['city']}}</div>\n        <div class=\"bottom\">{{dayWeek}}</div>\n        <div class=\"bottom\">{{weatherObj[0]['date']}}</div>\n      </div>  \n    </div>\n    <div class=\"scrollmenu\">\n      <div v-for=\"(item, index) in weatherObj\" v-bind:key=\"item.index\">\n        <div class=\"box\">\n          <div class=\"item-time\">{{weatherObj[index]['hour']}}</div>\n          <div class=\"item-icon\"><img alt=\"sun\" src=\"~@/assets/sun.svg\"></div>\n          <div class=\"item-temp\">{{weatherObj[index]['celsius']}}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Weather\",\n  data () {\n    return {\n      weatherObj: {},\n      dayWeek: \"\"\n    }\n  },\n  methods: {\n    dayConverter (UNIX_timestamp) {\n      var a = new Date(UNIX_timestamp * 1000);\n      var months = [\"January\",\"February\", \"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\n      var month = months[a.getMonth()];\n      var date = a.getDate();\n      var day = date + '. ' + month\n      return day;\n    },\n    cleanData (data) {\n      var d = new Date();\n      var weekday = new Array(7);\n      weekday[0] = \"Sunday\";\n      weekday[1] = \"Monday\";\n      weekday[2] = \"Tuesday\";\n      weekday[3] = \"Wednesday\";\n      weekday[4] = \"Thursday\";\n      weekday[5] = \"Friday\";\n      weekday[6] = \"Saturday\";\n      this.dayWeek = weekday[d.getDay()]\n      var celsius;\n      var celsiusMax;\n      var celsiusMin;\n      var city;\n      var date;\n      var hour;\n      var lastItem = data.list.slice(1).slice(-9);\n      var visibility;\n      var fetchedWeather = {};\n      for (var i = 0; i < lastItem.length; i++) {\n        city = data[\"city\"][\"name\"];\n        date = this.dayConverter(lastItem[i][\"dt\"]);\n        hour = this.hourConverter(lastItem[i][\"dt\"]);\n        visibility = lastItem[i][\"weather\"][0][\"main\"];\n        celsius =  Math.round(lastItem[i][\"main\"][\"temp\"] -273.15);\n        celsiusMax = Math.round(lastItem[i][\"main\"][\"temp_max\"] -273.15);\n        celsiusMin = Math.round(lastItem[i][\"main\"][\"temp_min\"] -273.15);\n        fetchedWeather[i] = {\n                            \"city\": city,\n                            \"date\": date,\n                            \"hour\": hour,\n                            \"celsius\" : celsius,\n                            \"celsius_max\": celsiusMax,\n                            \"celsius_min\": celsiusMin,\n                            \"visibility\" : visibility\n                            };\n      }\n      this.weatherObj = fetchedWeather;\n    },\n    getItems () {\n      const url = \"https://cors-anywhere.herokuapp.com\" + \n                  \"/http://samples.openweathermap.org/data/2.5/forecast?id=524901&appid=b6907d289e10d714a6e88b30761fae22\";\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          this.cleanData(data)\n        });    \n    },\n    hourConverter(UNIX_timestamp){\n      var a = new Date(UNIX_timestamp * 1000);\n      var hour = a.getHours() < 10 ? '0' + a.getHours() : a.getHours();\n      var min = a.getMinutes() < 10 ? '0' + a.getMinutes() : a.getMinutes();\n      var time = hour + ':' + min\n      return time;\n    }   \n  },\n  beforeMount: function(){\n    this.getItems()\n  }\n}\n</script>\n\n<style scoped>\n@import url(https://fonts.googleapis.com/css?family=Roboto:400,700&display=swap);\n\n@media only screen and (max-width: 360px) {\n  div.flex-container > .temp-data {\n    margin: 10px 5px 0 0;\n  }\n  div.flex-container > .location-data {\n    margin: 10px 0 0 5px;\n  }\n  div.flex-container > .top-icon {\n    margin: 0 0 10px 0\n  }\n}\n\n.bottom {\ncolor:#FFF;\ntext-align:left;\nfont-size:1.15em;\nfont-weight:700;\n}\n\n.box > .item-time {\ncolor:#8385a1;\nmargin-top:10px;\n}\n\n.box > .item-time,\n.box > .item-temp,\n.box > .item-icon {\ndisplay:block;\n}\n\n.celsius {\nfont-size:2.3em;\nfont-weight:700;\n}\n\n.celsius::after,\n.item-temp::after,\n.max::after,\n.min::after {\ncontent:\"\\00b0\";\n}\n\n.item-temp {\nfont-weight:700;\nfont-size:1.4em;\n}\n\n.flex-container {\ndisplay:flex;\nflex-wrap:nowrap;\nbackground-color:#262a59;\njustify-content:center;\npadding:20px 0 0;\n}\n\n.flex-container > div {\nbackground-color:#262a59;\nwidth:150px;\ntext-align:center;\nline-height:30px;\nmargin:10px;\n}\n\n.max, .min {\nfloat:right;\n}\n\n.scrollmenu {\nbackground-color:#262a59;\noverflow:auto;\nwhite-space:nowrap;\n-webkit-overflow-scrolling:touch;\nheight:300px;\n}\n\n.scrollmenu div {\ndisplay:inline-block;\ncolor:#FFF;\ntext-align:center;\ntext-decoration:none;\npadding:14px;\n}\n\n.scrollmenu > div:nth-child(1) {\nbackground:#51557A;\n}\n\n.separator::after {\ncontent:\"/\";\nfloat:right;\npadding:0 5%;\n}\n\n.temp-data {\ncolor:#fff;\n}\n\n.temp-top {\nfont-size:.8em;\nfont-weight:400;\ncolor:#A8AABD;\nmargin:0 0 45px;\n}\n\n.top {\nfont-size:.8em;\ncolor:#8386a0;\ntext-align:left;\nmargin:0 0 7px;\n}\n\n.visibility {\nfloat:left;\n}\n\n.widget {\nfont-family:Roboto;\n}\n\n</style>\n"]}]}